- name: Stop certbot-renewal container if ssl is false
  community.docker.docker_container:
    name: "certbot-renew-{{ item.domain }}"
    state: absent
  when:
    - not item.ssl | default(false)


- name: Check for certificate and create it if necessary
  block:
    - name: Check if certificate exists
      become: yes
      become_user: root
      stat:
        path: "{{ sites_path }}/etc/certbot/conf/live/{{ item.domain }}/fullchain.pem"
      register: certificate
      
    - name: Check if a file named "staging" exists
      become: yes
      become_user: root
      stat:
        path: "{{ sites_path }}/{{ item.domain }}/certbot/staging"
      register: staging
    
    - name: Create certificate if necessary
      include_tasks: create-certificate.yml
      when: not certificate.stat.exists or 
            (not item.staging | d(false) and staging.stat.exists) or
            (item.staging | d(false) and not staging.stat.exists)
      
  when:
    - item.ssl | default(false)
    
- name: Start certbot-renewal service
  community.docker.docker_compose_v2:
    project_src: "{{ sites_path }}/{{ item.domain }}/certbot"
    services: 
      - "certbot-renew"
    remove_orphans: true
    project_name: "{{ item.name }}"
    state: present
  when:
    - item.ssl | default(false)
    
- name: Create html 80 nginx sites-available for domain
  template:
    src: nginx/html-80.j2
    dest: "{{ sites_path }}/etc/nginx/sites-enabled/{{ item.domain}}"
  vars:
    domain: "{{ item.domain }}"
  when:
    - not item.ssl | default(false)
    - item.type == "html"
  notify:
    restart nginx

- name: Create html 443 nginx sites-available for domain
  template:
    src: nginx/html-443.j2
    dest: "{{ sites_path }}/etc/nginx/sites-enabled/{{ item.domain}}"
  vars:
    domain: "{{ item.domain }}"
  when:
    - item.ssl | default(false)
    - item.type == "html"
  notify:
    restart nginx